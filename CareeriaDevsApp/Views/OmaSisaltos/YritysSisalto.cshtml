@model IEnumerable<CareeriaDevsApp.OmaSisalto>


@{
    ViewBag.Title = "YritysSisalto";
    WebGrid webGrid = new WebGrid(source: Model, canSort: false, canPage: false);
}

<h2>Osaajaprofiilien selaus</h2>

    Sinulle on @ViewBag.lukemattomatViestit uutta viestiä.
    <br />
    @Html.ActionLink("Lue saapuneet viestit", "HaeYrityksenViestit", "Viestis", new { id = Session["corporate_id"] }, null)
    <br />


    <b>Haku Avainsanalla</b>
    <br />
    @*Hakuinput*@
    <p>
        @using (Html.BeginForm("YritysSisalto", "OmaSisaltos", FormMethod.Get))  //Tommi, tägää OmaSisaltos controllerin YritysSisalto metodin avainsanahakua varten
        {
            @Html.TextBox("search") <input type="submit" value="Hae" />
        }
    </p>



    @*Testataan infinite scrolling*@

    <table class="Grid">
        <thead>
            <tr>
                <th scope="col">
                    Kuva
                </th>
                <th scope="col">
                    Nimi
                </th>
                <th scope="col">
                    Opiskelija omaesittely
                </th>
            </tr>
        </thead>
    </table>
    <div id="dvGrid" style="height: 250px; overflow: auto; width: 542px">
        @webGrid.GetHtml(
        htmlAttributes: new { @id = "WebGrid", @class = "Grid" },
        columns: webGrid.Columns(
                 webGrid.Column("omaKuva", "Kuva"),
                 webGrid.Column("opiskelija_Id", "Opiskelijan Id"),
                 webGrid.Column("omaTeksti", "Opiskelija omaesittely")))
    </div>
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        var pageIndex = 0;
        var pageCount;
        var isCompleted;
        $(function () {
            //Remove the original WebGrid header.
            $("#WebGrid tr").eq(0).remove();
            GetOpiskelijat();
        });
        //Load GridView Rows when DIV is scrolled.
        $("#dvGrid").on("scroll", function (e) {
            var $o = $(e.currentTarget);
            if ($o[0].scrollHeight - $o.scrollTop() <= $o.outerHeight()) {
                if (isCompleted) {
                    isCompleted = false;
                    GetOpiskelijat();
                }
            }
        });
        function GetOpiskelijat() {
            pageIndex++;
            if (pageIndex == 1 || pageIndex <= pageCount) {
                //Show Loader GIF Image.
                if ($("#WebGrid .loader").length == 0) {
                    var row = $("#WebGrid tr").eq(0).clone(true);
                    row.addClass("loader");
                    row.children().remove();
                    row.append('<td colspan = "999" style = "background-color:white"><img id="loader" alt="" src="/Content/Images/Loader.gif" /></td>');
                    $("#WebGrid").append(row);
                }
                $.ajax({
                    type: "POST",
                    url: "/OmaSisaltos/AjaxMethod",
                    data: '{pageIndex: ' + pageIndex + '}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: OnSuccess,
                    failure: function (response) {
                        alert(response.d);
                    },
                    error: function (response) {
                        alert(response.d);
                    }
                });
            }
        };
        function OnSuccess(response) {
            var model = response;
            pageCount = Math.ceil(parseFloat(model.RecordCount) / parseFloat(model.PageSize));
            $("#WebGrid .loader").remove();
            var row = $("#WebGrid tbody tr:last-child");

            //Remove the dummy row.
            if (row.find("td:empty").length > 0) {
               row.remove();
            }
            row = row.clone();

            $.each(model.OpiskelijaInfinite, function () {
                var opiskelija = this;
                $("td", row).eq(0).html(opiskelija.omaKuva);
                $("td", row).eq(1).html(opiskelija.opiskelija_Id);
                $("td", row).eq(2).html(opiskelija.omaTeksti);
                $("#WebGrid tbody").append(row);
                row = $("#WebGrid tbody tr:last-child").clone(true);
            });
            isCompleted = true;
        };
    </script>


    @*Testaus loppuu*@




    <table class="table">
        <tr>
            @*<th>
                    <p>Omat Asetukset</p>
                </th>*@
            <th>
                <p>Kuva</p>
            </th>
            <th>
                <p>Nimi</p>
            </th>
            <th>
                <p>Opiskelijan omaesittely</p>
            </th>

            <th></th>
        </tr>
        @if (Model.Count() == 0)  //Tommi, Jos avainsanalla ei tule osumia
        {
            <tr>
                <td colspan="4">Tällä avainsanalla ei tullut osumia</td>
            </tr>
        }
        else  //Tommi, Jos osumia tulee, suoritetaan foreach.
        {
            @*Haku rajaa tavaraa, mutta silti alla oleva foreach ajetaan alussa, alla oleva foreach paginoitava tai top10*@
        }


        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                        @Html.DisplayFor(modelItem => item.omatAsetukset)
                    </td>*@
                <td>
                    @*@Html.DisplayFor(modelItem => item.omaKuva)*@
                    @*Näytetään opiskelijan omaKuva -tietokannasta <img> sisään:*@
                    <p><img src="@Html.Raw(HttpUtility.HtmlDecode(item.omaKuva))" width="200"></p>
                </td>
                <td>
                    @*Näytetään opiskelijan koko nimi:*@
                    @Html.DisplayFor(modelItem => item.Opiskelija.etunimi) @Html.DisplayFor(modelItem => item.Opiskelija.sukunimi)
                </td>
                <td>
                    @*Näytetään opiskelijan itsemuokkaama "profiili":*@
                    @Html.Raw(HttpUtility.HtmlDecode(item.omaTeksti))
                </td>
                <td>
                    @Html.ActionLink("Lähetä viesti", "CreateOffer", "Viestis", new { opisId = item.opiskelija_Id }, null)
                </td>

            </tr>

        }

    </table>

